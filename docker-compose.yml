services:
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: xlsxworld-database
    profiles:
      - db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-xlsxworld_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_here}
      POSTGRES_DB: ${POSTGRES_DB:-xlsxworld}
    volumes:
      - xlsxworld_postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    expose:
      - "5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-xlsxworld_user} -d ${POSTGRES_DB:-xlsxworld}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: xlsxworld-backend
    restart: unless-stopped
    environment:
      # Optional: enable when running with database profile
      # DATABASE_URL=postgresql://${POSTGRES_USER:-xlsxworld_user}:${POSTGRES_PASSWORD:-secure_password_here}@xlsxworld-database:5432/${POSTGRES_DB:-xlsxworld}
      - PYTHONPATH=/app
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - CORS_ORIGINS=${CORS_ORIGINS:-https://api.xlsx.world}
      - JWT_SECRET=${JWT_SECRET:-change-me}
      - JWT_EXP_MIN=${JWT_EXP_MIN:-60}
    expose:
      - "8000"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  xlsxworld_postgres_data:


networks:
  app-network:
    external: true
